(window.webpackJsonp=window.webpackJsonp||[]).push([[2],{273:function(t,s,a){"use strict";a.r(s);var n=a(1),e=Object(n.a)({},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("p",[t._v("成年人的成长在于一次次的积累")]),t._v(" "),a("h1",{attrs:{id:"e01"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#e01","aria-hidden":"true"}},[t._v("#")]),t._v(" E01")]),t._v(" "),a("h1",{attrs:{id:"写-react-vue-项目时为什么要在列表组件中写-key，其作用是什么？"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#写-react-vue-项目时为什么要在列表组件中写-key，其作用是什么？","aria-hidden":"true"}},[t._v("#")]),t._v(" 写 React / Vue 项目时为什么要在列表组件中写 key，其作用是什么？")]),t._v(" "),a("blockquote",[a("p",[t._v("第一次看到这道题应该是刚接触vue和react的时候，当时肯定会不假思索的回答到是为了提高diff效率，在列表组建发生变化时能更好的得到响应。\n而实际上呢？在简单列表渲染过程中，没有绑定key的反而速度更快。的确是这样的，在简单模板且没有绑定key的情况下，会导致虚拟新旧节点对比更快，节点也会"),a("code",[t._v("原地复用")]),t._v(","),a("a",{attrs:{href:"https://github.com/Advanced-Frontend/Daily-Interview-Question/issues/1",target:"_blank",rel:"noopener noreferrer"}},[t._v("关于简单模板且没有绑定key请看"),a("OutboundLink")],1),t._v("，但是这个并不是key的作用，所以片面的说绑定key能提高diff效率是不严谨的。\n那么key的作用是什么呢？\n我的简单理解是为了在diff中，针对可变表单(或是相同的节点组)的"),a("code",[t._v("同级比较")]),t._v("效率。z在更新组件时判断两个节点是否相同。相同就复用，不相同就删除旧的创建新的。")])]),t._v(" "),a("h2",{attrs:{id:"更准确"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#更准确","aria-hidden":"true"}},[t._v("#")]),t._v(" 更准确")]),t._v(" "),a("blockquote",[a("p",[t._v("因为当虚拟节点带上了key值，就不会存在原地复用的情况，不会出现对比错位")])]),t._v(" "),a("h2",{attrs:{id:"更快"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#更快","aria-hidden":"true"}},[t._v("#")]),t._v(" 更快")]),t._v(" "),a("blockquote",[a("p",[t._v("利用key的唯一性生成map对象来获取对应节点，比遍历方式更快。")])]),t._v(" "),a("p",[t._v("这里需要额外补充diff算法的基本知识。")]),t._v(" "),a("hr"),t._v(" "),a("h1",{attrs:{id:"_1-2-3-map-parseint-what-why"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-3-map-parseint-what-why","aria-hidden":"true"}},[t._v("#")]),t._v(" ['1', '2', '3'].map(parseInt) what & why ?")]),t._v(" "),a("p",[t._v("答案是[1,2,3]，完事了。"),a("br"),t._v("\n但是去控制台试了一下，瞬间怀疑人生。"),a("br"),t._v("\n答案是[1,NaN,NaN]"),a("br")]),t._v(" "),a("p",[t._v("我们先确定map()的用法，map是js数组对象上的一个方法，语法为：")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("array"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("map")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("value"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("index"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("arr")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("thisValue"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nmap接受两个参数，第一个参数是必有的，一个函数，数组中的每一个元素都会执行这个函数，该函数的参数有三个value是必须的，其余两个是可选\b；\nmap的第二个参数是可选的，改变"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),t._v("指向。\nmap是有返回值的，返回的是一个新数组。该新数组是愿数组经过"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v("后的。\n")])])]),a("p",[t._v("接着我们看parseInt()方法，该方法解析一个字符串，并返回一个整数。")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("paeseInt")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("string"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("radix"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nstring"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("必需，要被解析的字符串。\nradix"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("可选，表示要解析的数字的基数，该值的范围是 "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("～"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("36.")]),t._v("如果小于"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("或大于"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("36")]),t._v("，返回"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("NaN")]),t._v("，如果缺失或者为"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("，那么以"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),t._v("来解析，如果“"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("x”“"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("X”，将以"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("16")]),t._v("为基数。\n返回值是解析后的数字\n")])])]),a("p",[t._v("最后我们来看题干")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'1'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'2'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'3'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("map")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("parseInt"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("就等于\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'1'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'2'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'3'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("map")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("parseInt")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("value"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("index"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("parseInt")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'1'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" 把字符串"),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'1'")]),t._v("，以"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),t._v("为基数解析  "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("parseint")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'2'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("） radix"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("   "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("NaN")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("parseint")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'3'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("） "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v("不是二进制   "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("NaN")]),t._v("\n\n")])])]),a("hr"),t._v(" "),a("h1",{attrs:{id:"节流和防抖是什么？怎么实现？"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#节流和防抖是什么？怎么实现？","aria-hidden":"true"}},[t._v("#")]),t._v(" 节流和防抖是什么？怎么实现？")]),t._v(" "),a("h2",{attrs:{id:"节流，顾名思义节约流量-节流是连续触发事件的过程中以一定时间间隔执行函数。节流会稀释你的执行频率，比如每间隔1秒钟，只会执行一次函数，无论这1秒钟内触发了多少次事件。"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#节流，顾名思义节约流量-节流是连续触发事件的过程中以一定时间间隔执行函数。节流会稀释你的执行频率，比如每间隔1秒钟，只会执行一次函数，无论这1秒钟内触发了多少次事件。","aria-hidden":"true"}},[t._v("#")]),t._v(" 节流，顾名思义节约流量,节流是连续触发事件的过程中以一定时间间隔执行函数。节流会稀释你的执行频率，比如每间隔1秒钟，只会执行一次函数，无论这1秒钟内触发了多少次事件。")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("throttle")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("fn"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("time")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" timeout"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("      "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//声明定时器并且当一个标记使用")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 闭包")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" that "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("     "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 记录必包this指向")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("timeout"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//当没有定时器时，进入函数")]),t._v("\n      timeout "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("setTimerout")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        timeout "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("   "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("fn")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("apply")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("that"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("time"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("h2",{attrs:{id:"防抖，连续触发事件过程中不执行，事件触发后一定事件内只执行一次，如果在该时间内事件再次触发，则从头计时。"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#防抖，连续触发事件过程中不执行，事件触发后一定事件内只执行一次，如果在该时间内事件再次触发，则从头计时。","aria-hidden":"true"}},[t._v("#")]),t._v(" 防抖，连续触发事件过程中不执行，事件触发后一定事件内只执行一次，如果在该时间内事件再次触发，则从头计时。")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("funcrion "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("debounce")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("fn"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("time")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("  \n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" timeout"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" that "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("clearTimer")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("timeout"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    timeout "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("setTimeout")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("fn")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("apply")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("that"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("time"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("两者的区别就是节流没有关闭定时器，在第一次等待执行事件中(time时间内)，即第一次开启定时器后 (!timeout) 为fasle，事件不会真正执行，只有等到第一个定时器工作时timeout=null后的事件才执行；\n而防抖是只要都事件触发都会开启并关闭定时器，只有在一定时间内没有事件触发才会真正执行。")])])},[],!1,null,null,null);s.default=e.exports}}]);